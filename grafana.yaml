USER-SUPPLIED VALUES:
USER-SUPPLIED VALUES: null
admin:
  existingSecret: ""
  passwordKey: admin-password
  userKey: admin-user
adminUser: admin
affinity: {}
alerting: {}
autoscaling:
  behavior: {}
  enabled: false
  maxReplicas: 5
  minReplicas: 1
  targetCPU: "60"
  targetMemory: ""
containerSecurityContext: {}
createConfigmap: true
dashboardProviders: {}
dashboards: {}
dashboardsConfigMaps: {}
datasources: {}
deploymentStrategy:
  type: RollingUpdate
downloadDashboards:
  env: {}
  envFromSecret: ""
  envValueFrom: {}
  resources: {}
  securityContext: {}
downloadDashboardsImage:
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: curlimages/curl
  sha: ""
  tag: 7.85.0
enableKubeBackwardCompatibility: false
enableServiceLinks: true
env: {}
envFromConfigMaps: []
envFromSecret: ""
envFromSecrets: []
envRenderSecret: {}
envValueFrom: {}
extraConfigmapMounts: []
extraContainerVolumes: []
extraContainers: ""
extraEmptyDirMounts: []
extraExposePorts: []
extraInitContainers: []
extraLabels: {}
extraObjects: []
extraSecretMounts: []
extraVolumeMounts: []
global:
  image:
    registry: null
  imagePullSecrets: []
gossipPortName: gossip
grafana.ini:
  analytics:
    check_for_updates: true
  grafana_net:
    url: https://grafana.net
  log:
    mode: console
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  server:
    domain: '{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ .Values.ingress.hosts
      | first }}{{ else }}''''{{ end }}'
  smtp:
    enabled: true
    host: smtp.gmail.com:465
    user: finnabouttacatchsomerats@gmail.com
    from_address: finnabouttacatchsomerats@gmail.com
    password: ltfd xfcu ggtw hbeo
headlessService: false
hostAliases: []
image:
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: grafana/grafana
  sha: ""
  tag: ""
imageRenderer:
  affinity: {}
  autoscaling:
    behavior: {}
    enabled: false
    maxReplicas: 5
    minReplicas: 1
    targetCPU: "60"
    targetMemory: ""
  containerSecurityContext: {}
  deploymentStrategy: {}
  enabled: false
  env:
    HTTP_HOST: 0.0.0.0
  envValueFrom: {}
  grafanaProtocol: http
  grafanaSubPath: ""
  hostAliases: []
  image:
    pullPolicy: Always
    registry: docker.io
    repository: grafana/grafana-image-renderer
    sha: ""
    tag: latest
  networkPolicy:
    extraIngressSelectors: []
    limitEgress: false
    limitIngress: true
  nodeSelector: {}
  podPortName: http
  priorityClassName: ""
  replicas: 1
  resources: {}
  revisionHistoryLimit: 10
  securityContext: {}
  service:
    appProtocol: ""
    enabled: true
    port: 8081
    portName: http
    targetPort: 8081
  serviceAccountName: ""
  serviceMonitor:
    enabled: false
    interval: 1m
    labels: {}
    path: /metrics
    relabelings: []
    scheme: http
    scrapeTimeout: 30s
    targetLabels: []
    tlsConfig: {}
  tolerations: []
ingress:
  annotations: {}
  enabled: false
  extraPaths: []
  hosts:
  - chart-example.local
  labels: {}
  path: /
  pathType: Prefix
  tls: []
initChownData:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: library/busybox
    sha: ""
    tag: 1.31.1
  resources: {}
  securityContext: {}
ldap:
  config: ""
  enabled: false
  existingSecret: ""
lifecycleHooks: {}
livenessProbe:
  failureThreshold: 10
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 60
  timeoutSeconds: 30
namespaceOverride: ""
networkPolicy:
  allowExternal: true
  egress:
    enabled: false
    ports: []
  enabled: false
  explicitNamespacesSelector: {}
  ingress: true
nodeSelector: {}
notifiers: {}
persistence:
  type: pvc
  enabled: false
  accessModes:
  - ReadWriteOnce
  extraPvcLabels: {}
  finalizers:
  - kubernetes.io/pvc-protection
  inMemory:
    enabled: false
  size: 4Gi
  storageClassName: ocs-external-storagecluster-ceph-rbd
plugins: []
podDisruptionBudget: {}
podPortName: grafana
rbac:
  create: false
  extraClusterRoleRules: []
  extraRoleRules: []
  namespaced: false
  pspEnabled: false
  pspUseAppArmor: false
readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
replicas: 1
resources: {}
revisionHistoryLimit: 10
securityContext:
  fsGroup: null
  runAsGroup: null
  runAsNonRoot: true
  runAsUser: null
service:
  annotations: {}
  appProtocol: ""
  enabled: true
  labels: {}
  port: 80
  portName: service
  targetPort: 3000
  type: ClusterIP
serviceAccount:
  autoMount: true
  create: true
  labels: {}
  name: null
  nameTest: null
serviceMonitor:
  enabled: false
  interval: 30s
  labels: {}
  metricRelabelings: []
  path: /metrics
  relabelings: []
  scheme: http
  scrapeTimeout: 30s
  targetLabels: []
  tlsConfig: {}
sidecar:
  alerts:
    enabled: false
    env: {}
    extraMounts: []
    label: grafana_alert
    labelValue: ""
    reloadURL: http://localhost:3000/api/admin/provisioning/alerting/reload
    resource: both
    script: null
    searchNamespace: null
    sizeLimit: {}
    skipReload: false
    watchMethod: WATCH
  dashboards:
    SCProvider: true
    defaultFolderName: null
    enabled: false
    env: {}
    extraMounts: []
    folder: /tmp/dashboards
    folderAnnotation: null
    label: grafana_dashboard
    labelValue: ""
    provider:
      allowUiUpdates: false
      disableDelete: false
      folder: ""
      foldersFromFilesStructure: false
      name: sidecarProvider
      orgid: 1
      type: file
    reloadURL: http://localhost:3000/api/admin/provisioning/dashboards/reload
    resource: both
    script: null
    searchNamespace: null
    sizeLimit: {}
    skipReload: false
    watchMethod: WATCH
  datasources:
    enabled: false
    env: {}
    initDatasources: false
    label: grafana_datasource
    labelValue: ""
    reloadURL: http://localhost:3000/api/admin/provisioning/datasources/reload
    resource: both
    script: null
    searchNamespace: null
    sizeLimit: {}
    skipReload: false
    watchMethod: WATCH
  enableUniqueFilenames: false
  image:
    registry: quay.io
    repository: kiwigrid/k8s-sidecar
    sha: ""
    tag: 1.25.1
  imagePullPolicy: IfNotPresent
  livenessProbe: {}
  notifiers:
    enabled: false
    env: {}
    initNotifiers: false
    label: grafana_notifier
    labelValue: ""
    reloadURL: http://localhost:3000/api/admin/provisioning/notifications/reload
    resource: both
    script: null
    searchNamespace: null
    sizeLimit: {}
    skipReload: false
    watchMethod: WATCH
  plugins:
    enabled: false
    env: {}
    initPlugins: false
    label: grafana_plugin
    labelValue: ""
    reloadURL: http://localhost:3000/api/admin/provisioning/plugins/reload
    resource: both
    script: null
    searchNamespace: null
    sizeLimit: {}
    skipReload: false
    watchMethod: WATCH
  readinessProbe: {}
  resources: {}
  securityContext: {}
smtp:
  existingSecret: ""
  passwordKey: password
  userKey: user
testFramework:
  enabled: true
  image:
    registry: docker.io
    repository: bats/bats
    tag: v1.4.1
  imagePullPolicy: IfNotPresent
  securityContext: {}
tolerations: []
topologySpreadConstraints: []
useStatefulSet: false